#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ScenerySwap")]
public partial class ModelsDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTag(Tag instance);
  partial void UpdateTag(Tag instance);
  partial void DeleteTag(Tag instance);
  partial void InsertGenre(Genre instance);
  partial void UpdateGenre(Genre instance);
  partial void DeleteGenre(Genre instance);
  partial void InsertPicture(Picture instance);
  partial void UpdatePicture(Picture instance);
  partial void DeletePicture(Picture instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertLineItem(LineItem instance);
  partial void UpdateLineItem(LineItem instance);
  partial void DeleteLineItem(LineItem instance);
  partial void InsertInvoice(Invoice instance);
  partial void UpdateInvoice(Invoice instance);
  partial void DeleteInvoice(Invoice instance);
  #endregion
	
	public ModelsDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ScenerySwapConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ModelsDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ModelsDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Tag> Tags
	{
		get
		{
			return this.GetTable<Tag>();
		}
	}
	
	public System.Data.Linq.Table<Genre> Genres
	{
		get
		{
			return this.GetTable<Genre>();
		}
	}
	
	public System.Data.Linq.Table<Picture> Pictures
	{
		get
		{
			return this.GetTable<Picture>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<LineItem> LineItems
	{
		get
		{
			return this.GetTable<LineItem>();
		}
	}
	
	public System.Data.Linq.Table<Invoice> Invoices
	{
		get
		{
			return this.GetTable<Invoice>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TagID;
	
	private System.Nullable<int> _ProductID;
	
	private string _TagName;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    #endregion
	
	public Tag()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TagID
	{
		get
		{
			return this._TagID;
		}
		set
		{
			if ((this._TagID != value))
			{
				this.OnTagIDChanging(value);
				this.SendPropertyChanging();
				this._TagID = value;
				this.SendPropertyChanged("TagID");
				this.OnTagIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
	public System.Nullable<int> ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(50)")]
	public string TagName
	{
		get
		{
			return this._TagName;
		}
		set
		{
			if ((this._TagName != value))
			{
				this.OnTagNameChanging(value);
				this.SendPropertyChanging();
				this._TagName = value;
				this.SendPropertyChanged("TagName");
				this.OnTagNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Tag", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Tags.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Tags.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genre")]
public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _GenreID;
	
	private string _ShortName;
	
	private string _LongName;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    #endregion
	
	public Genre()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int GenreID
	{
		get
		{
			return this._GenreID;
		}
		set
		{
			if ((this._GenreID != value))
			{
				this.OnGenreIDChanging(value);
				this.SendPropertyChanging();
				this._GenreID = value;
				this.SendPropertyChanged("GenreID");
				this.OnGenreIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(25)")]
	public string ShortName
	{
		get
		{
			return this._ShortName;
		}
		set
		{
			if ((this._ShortName != value))
			{
				this.OnShortNameChanging(value);
				this.SendPropertyChanging();
				this._ShortName = value;
				this.SendPropertyChanged("ShortName");
				this.OnShortNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
	public string LongName
	{
		get
		{
			return this._LongName;
		}
		set
		{
			if ((this._LongName != value))
			{
				this.OnLongNameChanging(value);
				this.SendPropertyChanging();
				this._LongName = value;
				this.SendPropertyChanged("LongName");
				this.OnLongNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Product", Storage="_Products", ThisKey="GenreID", OtherKey="GenreID")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Genre = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Genre = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PictureID;
	
	private int _ProductID;
	
	private System.Data.Linq.Binary _Pic;
	
	private string _PictureName;
	
	private string _Extension;
	
	private string _PrimaryPic;
	
	private string _ImagePath;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureIDChanging(int value);
    partial void OnPictureIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnPicChanging(System.Data.Linq.Binary value);
    partial void OnPicChanged();
    partial void OnPictureNameChanging(string value);
    partial void OnPictureNameChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnPrimaryPicChanging(string value);
    partial void OnPrimaryPicChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
	
	public Picture()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PictureID
	{
		get
		{
			return this._PictureID;
		}
		set
		{
			if ((this._PictureID != value))
			{
				this.OnPictureIDChanging(value);
				this.SendPropertyChanging();
				this._PictureID = value;
				this.SendPropertyChanged("PictureID");
				this.OnPictureIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Pic
	{
		get
		{
			return this._Pic;
		}
		set
		{
			if ((this._Pic != value))
			{
				this.OnPicChanging(value);
				this.SendPropertyChanging();
				this._Pic = value;
				this.SendPropertyChanged("Pic");
				this.OnPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PictureName
	{
		get
		{
			return this._PictureName;
		}
		set
		{
			if ((this._PictureName != value))
			{
				this.OnPictureNameChanging(value);
				this.SendPropertyChanging();
				this._PictureName = value;
				this.SendPropertyChanged("PictureName");
				this.OnPictureNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(10)")]
	public string Extension
	{
		get
		{
			return this._Extension;
		}
		set
		{
			if ((this._Extension != value))
			{
				this.OnExtensionChanging(value);
				this.SendPropertyChanging();
				this._Extension = value;
				this.SendPropertyChanged("Extension");
				this.OnExtensionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPic", DbType="NVarChar(10)")]
	public string PrimaryPic
	{
		get
		{
			return this._PrimaryPic;
		}
		set
		{
			if ((this._PrimaryPic != value))
			{
				this.OnPrimaryPicChanging(value);
				this.SendPropertyChanging();
				this._PrimaryPic = value;
				this.SendPropertyChanged("PrimaryPic");
				this.OnPrimaryPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NChar(80)")]
	public string ImagePath
	{
		get
		{
			return this._ImagePath;
		}
		set
		{
			if ((this._ImagePath != value))
			{
				this.OnImagePathChanging(value);
				this.SendPropertyChanging();
				this._ImagePath = value;
				this.SendPropertyChanged("ImagePath");
				this.OnImagePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Picture", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Pictures.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Pictures.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private string _FName;
	
	private string _LName;
	
	private string _Address;
	
	private string _City;
	
	private string _State;
	
	private string _Zip;
	
	private string _Username;
	
	private string _Email;
	
	private string _PaymentMethod;
	
	private string _SeeMature;
	
	private string _Newsletter;
	
	private string _LineOfWork;
	
	private string _AvatarPic;
	
	private string _Website;
	
	private string _Country;
	
	private string _Phone;
	
	private string _Company;
	
	private string _DisplayEmail;
	
	private string _JoinedDate;
	
	private EntitySet<Product> _Products;
	
	private EntitySet<Invoice> _Invoices;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnSeeMatureChanging(string value);
    partial void OnSeeMatureChanged();
    partial void OnNewsletterChanging(string value);
    partial void OnNewsletterChanged();
    partial void OnLineOfWorkChanging(string value);
    partial void OnLineOfWorkChanged();
    partial void OnAvatarPicChanging(string value);
    partial void OnAvatarPicChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnDisplayEmailChanging(string value);
    partial void OnDisplayEmailChanged();
    partial void OnJoinedDateChanging(string value);
    partial void OnJoinedDateChanged();
    #endregion
	
	public User()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this.OnLNameChanging(value);
				this.SendPropertyChanging();
				this._LName = value;
				this.SendPropertyChanged("LName");
				this.OnLNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string PaymentMethod
	{
		get
		{
			return this._PaymentMethod;
		}
		set
		{
			if ((this._PaymentMethod != value))
			{
				this.OnPaymentMethodChanging(value);
				this.SendPropertyChanging();
				this._PaymentMethod = value;
				this.SendPropertyChanged("PaymentMethod");
				this.OnPaymentMethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeMature", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string SeeMature
	{
		get
		{
			return this._SeeMature;
		}
		set
		{
			if ((this._SeeMature != value))
			{
				this.OnSeeMatureChanging(value);
				this.SendPropertyChanging();
				this._SeeMature = value;
				this.SendPropertyChanged("SeeMature");
				this.OnSeeMatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newsletter", DbType="NVarChar(10)")]
	public string Newsletter
	{
		get
		{
			return this._Newsletter;
		}
		set
		{
			if ((this._Newsletter != value))
			{
				this.OnNewsletterChanging(value);
				this.SendPropertyChanging();
				this._Newsletter = value;
				this.SendPropertyChanged("Newsletter");
				this.OnNewsletterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineOfWork", DbType="NVarChar(50)")]
	public string LineOfWork
	{
		get
		{
			return this._LineOfWork;
		}
		set
		{
			if ((this._LineOfWork != value))
			{
				this.OnLineOfWorkChanging(value);
				this.SendPropertyChanging();
				this._LineOfWork = value;
				this.SendPropertyChanged("LineOfWork");
				this.OnLineOfWorkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarPic", DbType="NVarChar(100)")]
	public string AvatarPic
	{
		get
		{
			return this._AvatarPic;
		}
		set
		{
			if ((this._AvatarPic != value))
			{
				this.OnAvatarPicChanging(value);
				this.SendPropertyChanging();
				this._AvatarPic = value;
				this.SendPropertyChanged("AvatarPic");
				this.OnAvatarPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(200)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayEmail", DbType="NVarChar(10)")]
	public string DisplayEmail
	{
		get
		{
			return this._DisplayEmail;
		}
		set
		{
			if ((this._DisplayEmail != value))
			{
				this.OnDisplayEmailChanging(value);
				this.SendPropertyChanging();
				this._DisplayEmail = value;
				this.SendPropertyChanged("DisplayEmail");
				this.OnDisplayEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinedDate", DbType="NVarChar(50)")]
	public string JoinedDate
	{
		get
		{
			return this._JoinedDate;
		}
		set
		{
			if ((this._JoinedDate != value))
			{
				this.OnJoinedDateChanging(value);
				this.SendPropertyChanging();
				this._JoinedDate = value;
				this.SendPropertyChanged("JoinedDate");
				this.OnJoinedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_Products", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<Invoice> Invoices
	{
		get
		{
			return this._Invoices;
		}
		set
		{
			this._Invoices.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Invoices(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Invoices(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _UserID;
	
	private string _Name;
	
	private string _MediaType;
	
	private decimal _Price;
	
	private System.Nullable<decimal> _Price_Commercial;
	
	private string _OrigProgram;
	
	private int _GenreID;
	
	private System.Nullable<System.DateTime> _PublishedDate;
	
	private System.Nullable<System.DateTime> _SubmittedDate;
	
	private string _Geometry;
	
	private int _Polygons;
	
	private int _Vertices;
	
	private string _Textures;
	
	private string _Materials;
	
	private string _Rigged;
	
	private string _Animated;
	
	private string _Description;
	
	private string _FileName;
	
	private System.Data.Linq.Binary _ArtFile;
	
	private string _Program;
	
	private System.Nullable<decimal> _Size;
	
	private string _GameReady;
	
	private string _Mature;
	
	private string _Version;
	
	private string _Published;
	
	private string _QualityCheck;
	
	private string _Extension;
	
	private string _UnderReview;
	
	private EntitySet<Tag> _Tags;
	
	private EntitySet<Picture> _Pictures;
	
	private EntitySet<LineItem> _LineItems;
	
	private EntityRef<Genre> _Genre;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMediaTypeChanging(string value);
    partial void OnMediaTypeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPrice_CommercialChanging(System.Nullable<decimal> value);
    partial void OnPrice_CommercialChanged();
    partial void OnOrigProgramChanging(string value);
    partial void OnOrigProgramChanged();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnPublishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedDateChanged();
    partial void OnSubmittedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmittedDateChanged();
    partial void OnGeometryChanging(string value);
    partial void OnGeometryChanged();
    partial void OnPolygonsChanging(int value);
    partial void OnPolygonsChanged();
    partial void OnVerticesChanging(int value);
    partial void OnVerticesChanged();
    partial void OnTexturesChanging(string value);
    partial void OnTexturesChanged();
    partial void OnMaterialsChanging(string value);
    partial void OnMaterialsChanged();
    partial void OnRiggedChanging(string value);
    partial void OnRiggedChanged();
    partial void OnAnimatedChanging(string value);
    partial void OnAnimatedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnArtFileChanging(System.Data.Linq.Binary value);
    partial void OnArtFileChanged();
    partial void OnProgramChanging(string value);
    partial void OnProgramChanged();
    partial void OnSizeChanging(System.Nullable<decimal> value);
    partial void OnSizeChanged();
    partial void OnGameReadyChanging(string value);
    partial void OnGameReadyChanged();
    partial void OnMatureChanging(string value);
    partial void OnMatureChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnPublishedChanging(string value);
    partial void OnPublishedChanged();
    partial void OnQualityCheckChanging(string value);
    partial void OnQualityCheckChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnUnderReviewChanging(string value);
    partial void OnUnderReviewChanged();
    #endregion
	
	public Product()
	{
		this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
		this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
		this._LineItems = new EntitySet<LineItem>(new Action<LineItem>(this.attach_LineItems), new Action<LineItem>(this.detach_LineItems));
		this._Genre = default(EntityRef<Genre>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaType", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string MediaType
	{
		get
		{
			return this._MediaType;
		}
		set
		{
			if ((this._MediaType != value))
			{
				this.OnMediaTypeChanging(value);
				this.SendPropertyChanging();
				this._MediaType = value;
				this.SendPropertyChanged("MediaType");
				this.OnMediaTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_Commercial", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Price_Commercial
	{
		get
		{
			return this._Price_Commercial;
		}
		set
		{
			if ((this._Price_Commercial != value))
			{
				this.OnPrice_CommercialChanging(value);
				this.SendPropertyChanging();
				this._Price_Commercial = value;
				this.SendPropertyChanged("Price_Commercial");
				this.OnPrice_CommercialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigProgram", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string OrigProgram
	{
		get
		{
			return this._OrigProgram;
		}
		set
		{
			if ((this._OrigProgram != value))
			{
				this.OnOrigProgramChanging(value);
				this.SendPropertyChanging();
				this._OrigProgram = value;
				this.SendPropertyChanged("OrigProgram");
				this.OnOrigProgramChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", DbType="Int NOT NULL")]
	public int GenreID
	{
		get
		{
			return this._GenreID;
		}
		set
		{
			if ((this._GenreID != value))
			{
				if (this._Genre.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGenreIDChanging(value);
				this.SendPropertyChanging();
				this._GenreID = value;
				this.SendPropertyChanged("GenreID");
				this.OnGenreIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PublishedDate
	{
		get
		{
			return this._PublishedDate;
		}
		set
		{
			if ((this._PublishedDate != value))
			{
				this.OnPublishedDateChanging(value);
				this.SendPropertyChanging();
				this._PublishedDate = value;
				this.SendPropertyChanged("PublishedDate");
				this.OnPublishedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SubmittedDate
	{
		get
		{
			return this._SubmittedDate;
		}
		set
		{
			if ((this._SubmittedDate != value))
			{
				this.OnSubmittedDateChanging(value);
				this.SendPropertyChanging();
				this._SubmittedDate = value;
				this.SendPropertyChanged("SubmittedDate");
				this.OnSubmittedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geometry", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Geometry
	{
		get
		{
			return this._Geometry;
		}
		set
		{
			if ((this._Geometry != value))
			{
				this.OnGeometryChanging(value);
				this.SendPropertyChanging();
				this._Geometry = value;
				this.SendPropertyChanged("Geometry");
				this.OnGeometryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Polygons", DbType="Int NOT NULL")]
	public int Polygons
	{
		get
		{
			return this._Polygons;
		}
		set
		{
			if ((this._Polygons != value))
			{
				this.OnPolygonsChanging(value);
				this.SendPropertyChanging();
				this._Polygons = value;
				this.SendPropertyChanged("Polygons");
				this.OnPolygonsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vertices", DbType="Int NOT NULL")]
	public int Vertices
	{
		get
		{
			return this._Vertices;
		}
		set
		{
			if ((this._Vertices != value))
			{
				this.OnVerticesChanging(value);
				this.SendPropertyChanging();
				this._Vertices = value;
				this.SendPropertyChanged("Vertices");
				this.OnVerticesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Textures", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Textures
	{
		get
		{
			return this._Textures;
		}
		set
		{
			if ((this._Textures != value))
			{
				this.OnTexturesChanging(value);
				this.SendPropertyChanging();
				this._Textures = value;
				this.SendPropertyChanged("Textures");
				this.OnTexturesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materials", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Materials
	{
		get
		{
			return this._Materials;
		}
		set
		{
			if ((this._Materials != value))
			{
				this.OnMaterialsChanging(value);
				this.SendPropertyChanging();
				this._Materials = value;
				this.SendPropertyChanged("Materials");
				this.OnMaterialsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rigged", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Rigged
	{
		get
		{
			return this._Rigged;
		}
		set
		{
			if ((this._Rigged != value))
			{
				this.OnRiggedChanging(value);
				this.SendPropertyChanging();
				this._Rigged = value;
				this.SendPropertyChanged("Rigged");
				this.OnRiggedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animated", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Animated
	{
		get
		{
			return this._Animated;
		}
		set
		{
			if ((this._Animated != value))
			{
				this.OnAnimatedChanging(value);
				this.SendPropertyChanging();
				this._Animated = value;
				this.SendPropertyChanged("Animated");
				this.OnAnimatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50)")]
	public string FileName
	{
		get
		{
			return this._FileName;
		}
		set
		{
			if ((this._FileName != value))
			{
				this.OnFileNameChanging(value);
				this.SendPropertyChanging();
				this._FileName = value;
				this.SendPropertyChanged("FileName");
				this.OnFileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtFile", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary ArtFile
	{
		get
		{
			return this._ArtFile;
		}
		set
		{
			if ((this._ArtFile != value))
			{
				this.OnArtFileChanging(value);
				this.SendPropertyChanging();
				this._ArtFile = value;
				this.SendPropertyChanged("ArtFile");
				this.OnArtFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(50)")]
	public string Program
	{
		get
		{
			return this._Program;
		}
		set
		{
			if ((this._Program != value))
			{
				this.OnProgramChanging(value);
				this.SendPropertyChanging();
				this._Program = value;
				this.SendPropertyChanged("Program");
				this.OnProgramChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameReady", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GameReady
	{
		get
		{
			return this._GameReady;
		}
		set
		{
			if ((this._GameReady != value))
			{
				this.OnGameReadyChanging(value);
				this.SendPropertyChanging();
				this._GameReady = value;
				this.SendPropertyChanged("GameReady");
				this.OnGameReadyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mature", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Mature
	{
		get
		{
			return this._Mature;
		}
		set
		{
			if ((this._Mature != value))
			{
				this.OnMatureChanging(value);
				this.SendPropertyChanging();
				this._Mature = value;
				this.SendPropertyChanged("Mature");
				this.OnMatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(25)")]
	public string Version
	{
		get
		{
			return this._Version;
		}
		set
		{
			if ((this._Version != value))
			{
				this.OnVersionChanging(value);
				this.SendPropertyChanging();
				this._Version = value;
				this.SendPropertyChanged("Version");
				this.OnVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="NVarChar(10)")]
	public string Published
	{
		get
		{
			return this._Published;
		}
		set
		{
			if ((this._Published != value))
			{
				this.OnPublishedChanging(value);
				this.SendPropertyChanging();
				this._Published = value;
				this.SendPropertyChanged("Published");
				this.OnPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityCheck", DbType="NVarChar(10)")]
	public string QualityCheck
	{
		get
		{
			return this._QualityCheck;
		}
		set
		{
			if ((this._QualityCheck != value))
			{
				this.OnQualityCheckChanging(value);
				this.SendPropertyChanging();
				this._QualityCheck = value;
				this.SendPropertyChanged("QualityCheck");
				this.OnQualityCheckChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(15)")]
	public string Extension
	{
		get
		{
			return this._Extension;
		}
		set
		{
			if ((this._Extension != value))
			{
				this.OnExtensionChanging(value);
				this.SendPropertyChanging();
				this._Extension = value;
				this.SendPropertyChanged("Extension");
				this.OnExtensionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderReview", DbType="NChar(10)")]
	public string UnderReview
	{
		get
		{
			return this._UnderReview;
		}
		set
		{
			if ((this._UnderReview != value))
			{
				this.OnUnderReviewChanging(value);
				this.SendPropertyChanging();
				this._UnderReview = value;
				this.SendPropertyChanged("UnderReview");
				this.OnUnderReviewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Tag", Storage="_Tags", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<Tag> Tags
	{
		get
		{
			return this._Tags;
		}
		set
		{
			this._Tags.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Picture", Storage="_Pictures", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<Picture> Pictures
	{
		get
		{
			return this._Pictures;
		}
		set
		{
			this._Pictures.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_LineItem", Storage="_LineItems", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<LineItem> LineItems
	{
		get
		{
			return this._LineItems;
		}
		set
		{
			this._LineItems.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Product", Storage="_Genre", ThisKey="GenreID", OtherKey="GenreID", IsForeignKey=true)]
	public Genre Genre
	{
		get
		{
			return this._Genre.Entity;
		}
		set
		{
			Genre previousValue = this._Genre.Entity;
			if (((previousValue != value) 
						|| (this._Genre.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Genre.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Genre.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._GenreID = value.GenreID;
				}
				else
				{
					this._GenreID = default(int);
				}
				this.SendPropertyChanged("Genre");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Tags(Tag entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Tags(Tag entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_Pictures(Picture entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Pictures(Picture entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineItem")]
public partial class LineItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InvoiceNum;
	
	private int _ProductID;
	
	private decimal _UnitPrice;
	
	private int _Quantity;
	
	private System.Nullable<decimal> _Quant_Price;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<Invoice> _Invoice;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNumChanging(int value);
    partial void OnInvoiceNumChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnQuant_PriceChanging(System.Nullable<decimal> value);
    partial void OnQuant_PriceChanged();
    #endregion
	
	public LineItem()
	{
		this._Product = default(EntityRef<Product>);
		this._Invoice = default(EntityRef<Invoice>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int InvoiceNum
	{
		get
		{
			return this._InvoiceNum;
		}
		set
		{
			if ((this._InvoiceNum != value))
			{
				if (this._Invoice.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceNumChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNum = value;
				this.SendPropertyChanged("InvoiceNum");
				this.OnInvoiceNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
	public decimal UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quant_Price", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<decimal> Quant_Price
	{
		get
		{
			return this._Quant_Price;
		}
		set
		{
			if ((this._Quant_Price != value))
			{
				this.OnQuant_PriceChanging(value);
				this.SendPropertyChanging();
				this._Quant_Price = value;
				this.SendPropertyChanged("Quant_Price");
				this.OnQuant_PriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_LineItem", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.LineItems.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.LineItems.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_LineItem", Storage="_Invoice", ThisKey="InvoiceNum", OtherKey="InvoiceNum", IsForeignKey=true)]
	public Invoice Invoice
	{
		get
		{
			return this._Invoice.Entity;
		}
		set
		{
			Invoice previousValue = this._Invoice.Entity;
			if (((previousValue != value) 
						|| (this._Invoice.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Invoice.Entity = null;
					previousValue.LineItems.Remove(this);
				}
				this._Invoice.Entity = value;
				if ((value != null))
				{
					value.LineItems.Add(this);
					this._InvoiceNum = value.InvoiceNum;
				}
				else
				{
					this._InvoiceNum = default(int);
				}
				this.SendPropertyChanged("Invoice");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InvoiceNum;
	
	private int _UserID;
	
	private System.DateTime _OrderDate;
	
	private decimal _Subtotal;
	
	private decimal _SalesTax;
	
	private System.Nullable<decimal> _Total;
	
	private EntitySet<LineItem> _LineItems;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNumChanging(int value);
    partial void OnInvoiceNumChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    partial void OnSalesTaxChanging(decimal value);
    partial void OnSalesTaxChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    #endregion
	
	public Invoice()
	{
		this._LineItems = new EntitySet<LineItem>(new Action<LineItem>(this.attach_LineItems), new Action<LineItem>(this.detach_LineItems));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int InvoiceNum
	{
		get
		{
			return this._InvoiceNum;
		}
		set
		{
			if ((this._InvoiceNum != value))
			{
				this.OnInvoiceNumChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNum = value;
				this.SendPropertyChanged("InvoiceNum");
				this.OnInvoiceNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
	public System.DateTime OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Money NOT NULL")]
	public decimal Subtotal
	{
		get
		{
			return this._Subtotal;
		}
		set
		{
			if ((this._Subtotal != value))
			{
				this.OnSubtotalChanging(value);
				this.SendPropertyChanging();
				this._Subtotal = value;
				this.SendPropertyChanged("Subtotal");
				this.OnSubtotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTax", DbType="Money NOT NULL")]
	public decimal SalesTax
	{
		get
		{
			return this._SalesTax;
		}
		set
		{
			if ((this._SalesTax != value))
			{
				this.OnSalesTaxChanging(value);
				this.SendPropertyChanging();
				this._SalesTax = value;
				this.SendPropertyChanged("SalesTax");
				this.OnSalesTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<decimal> Total
	{
		get
		{
			return this._Total;
		}
		set
		{
			if ((this._Total != value))
			{
				this.OnTotalChanging(value);
				this.SendPropertyChanging();
				this._Total = value;
				this.SendPropertyChanged("Total");
				this.OnTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_LineItem", Storage="_LineItems", ThisKey="InvoiceNum", OtherKey="InvoiceNum")]
	public EntitySet<LineItem> LineItems
	{
		get
		{
			return this._LineItems;
		}
		set
		{
			this._LineItems.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Invoices.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Invoices.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Invoice = this;
	}
	
	private void detach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Invoice = null;
	}
}
#pragma warning restore 1591
